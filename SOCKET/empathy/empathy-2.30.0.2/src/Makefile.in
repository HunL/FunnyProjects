# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in \
	$(top_srcdir)/tools/check-coding-style.mk \
	$(top_srcdir)/tools/flymake.mk
bin_PROGRAMS = empathy$(EXEEXT) empathy-accounts$(EXEEXT) \
	empathy-debugger$(EXEEXT)
@HAVE_LIBCHAMPLAIN_TRUE@am__append_1 = \
@HAVE_LIBCHAMPLAIN_TRUE@	empathy-map-view.c			\
@HAVE_LIBCHAMPLAIN_TRUE@	empathy-map-view.h

@HAVE_LIBCHAMPLAIN_TRUE@am__append_2 = \
@HAVE_LIBCHAMPLAIN_TRUE@	empathy-map-view.ui

@HAVE_LIBCHAMPLAIN_FALSE@am__append_3 = \
@HAVE_LIBCHAMPLAIN_FALSE@	empathy-map-view.c			\
@HAVE_LIBCHAMPLAIN_FALSE@	empathy-map-view.h			\
@HAVE_LIBCHAMPLAIN_FALSE@	empathy-map-view.ui

@HAVE_CONTROL_CENTER_EMBEDDING_FALSE@am__append_4 = $(libempathy_accounts_panel_la_SOURCES)
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@am__append_5 = $(libempathy_accounts_panel_la_SOURCES)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-compiler-flag.m4 \
	$(top_srcdir)/m4/empathy-args.m4 \
	$(top_srcdir)/m4/empathy-valgrind.m4 \
	$(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/intltool.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(ccmodulesdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(uidir)"
LTLIBRARIES = $(ccmodules_LTLIBRARIES) $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libempathy_accounts_common_la_DEPENDENCIES =  \
	$(top_builddir)/libempathy-gtk/libempathy-gtk.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_libempathy_accounts_common_la_OBJECTS = empathy-accounts-common.lo \
	empathy-account-assistant.lo empathy-accounts-dialog.lo \
	empathy-auto-salut-account-helper.lo empathy-import-dialog.lo \
	empathy-import-mc4-accounts.lo empathy-import-pidgin.lo \
	empathy-import-widget.lo empathy-import-utils.lo \
	ephy-spinner.lo
libempathy_accounts_common_la_OBJECTS =  \
	$(am_libempathy_accounts_common_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@libempathy_accounts_panel_la_DEPENDENCIES =  \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(am__DEPENDENCIES_1) \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(am__DEPENDENCIES_1) \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	libempathy-accounts-common.la
am__libempathy_accounts_panel_la_SOURCES_DIST =  \
	empathy-accounts-module.c cc-empathy-accounts-page.c \
	cc-empathy-accounts-page.h cc-empathy-accounts-panel.c \
	cc-empathy-accounts-panel.h
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@am_libempathy_accounts_panel_la_OBJECTS = libempathy_accounts_panel_la-empathy-accounts-module.lo \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	libempathy_accounts_panel_la-cc-empathy-accounts-page.lo \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	libempathy_accounts_panel_la-cc-empathy-accounts-panel.lo
libempathy_accounts_panel_la_OBJECTS =  \
	$(am_libempathy_accounts_panel_la_OBJECTS)
libempathy_accounts_panel_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libempathy_accounts_panel_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@am_libempathy_accounts_panel_la_rpath =  \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	-rpath $(ccmodulesdir)
PROGRAMS = $(bin_PROGRAMS)
am__empathy_SOURCES_DIST = empathy-about-dialog.c \
	empathy-about-dialog.h empathy-call-window-fullscreen.c \
	empathy-call-window-fullscreen.h empathy-call-window.c \
	empathy-call-window.h empathy-chat-window.c \
	empathy-chat-window.h empathy-chatrooms-window.c \
	empathy-chatrooms-window.h empathy-event-manager.c \
	empathy-event-manager.h empathy-ft-manager.c \
	empathy-ft-manager.h empathy-invite-participant-dialog.c \
	empathy-invite-participant-dialog.h empathy-main-window.c \
	empathy-main-window.h empathy-migrate-butterfly-logs.c \
	empathy-migrate-butterfly-logs.h empathy-new-chatroom-dialog.c \
	empathy-new-chatroom-dialog.h empathy-preferences.c \
	empathy-preferences.h empathy-sidebar.c empathy-sidebar.h \
	empathy-status-icon.c empathy-status-icon.h empathy.c \
	empathy-map-view.c empathy-map-view.h
@HAVE_LIBCHAMPLAIN_TRUE@am__objects_1 = empathy-map-view.$(OBJEXT)
am__objects_2 = empathy-about-dialog.$(OBJEXT) \
	empathy-call-window-fullscreen.$(OBJEXT) \
	empathy-call-window.$(OBJEXT) empathy-chat-window.$(OBJEXT) \
	empathy-chatrooms-window.$(OBJEXT) \
	empathy-event-manager.$(OBJEXT) empathy-ft-manager.$(OBJEXT) \
	empathy-invite-participant-dialog.$(OBJEXT) \
	empathy-main-window.$(OBJEXT) \
	empathy-migrate-butterfly-logs.$(OBJEXT) \
	empathy-new-chatroom-dialog.$(OBJEXT) \
	empathy-preferences.$(OBJEXT) empathy-sidebar.$(OBJEXT) \
	empathy-status-icon.$(OBJEXT) empathy.$(OBJEXT) \
	$(am__objects_1)
am_empathy_OBJECTS = $(am__objects_2)
am__objects_3 =
nodist_empathy_OBJECTS = $(am__objects_3)
empathy_OBJECTS = $(am_empathy_OBJECTS) $(nodist_empathy_OBJECTS)
empathy_DEPENDENCIES = libempathy-accounts-common.la \
	$(top_builddir)/libempathy-gtk/libempathy-gtk.la \
	$(top_builddir)/libempathy/libempathy.la \
	$(top_builddir)/extensions/libemp-extensions.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_empathy_accounts_OBJECTS = empathy-accounts.$(OBJEXT)
empathy_accounts_OBJECTS = $(am_empathy_accounts_OBJECTS)
am__DEPENDENCIES_2 = $(top_builddir)/libempathy-gtk/libempathy-gtk.la \
	$(top_builddir)/libempathy/libempathy.la \
	$(top_builddir)/extensions/libemp-extensions.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
empathy_accounts_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	libempathy-accounts-common.la
am_empathy_debugger_OBJECTS = empathy-debug-window.$(OBJEXT) \
	empathy-debugger.$(OBJEXT)
empathy_debugger_OBJECTS = $(am_empathy_debugger_OBJECTS)
empathy_debugger_LDADD = $(LDADD)
empathy_debugger_DEPENDENCIES =  \
	$(top_builddir)/libempathy-gtk/libempathy-gtk.la \
	$(top_builddir)/libempathy/libempathy.la \
	$(top_builddir)/extensions/libemp-extensions.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libempathy_accounts_common_la_SOURCES) \
	$(libempathy_accounts_panel_la_SOURCES) $(empathy_SOURCES) \
	$(nodist_empathy_SOURCES) $(empathy_accounts_SOURCES) \
	$(empathy_debugger_SOURCES)
DIST_SOURCES = $(libempathy_accounts_common_la_SOURCES) \
	$(am__libempathy_accounts_panel_la_SOURCES_DIST) \
	$(am__empathy_SOURCES_DIST) $(empathy_accounts_SOURCES) \
	$(empathy_debugger_SOURCES)
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(ui_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_AMFLAGS = @ACLOCAL_AMFLAGS@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONNMAN_CFLAGS = @CONNMAN_CFLAGS@
CONNMAN_LIBS = @CONNMAN_LIBS@
CONTROL_CENTER_EMBEDDING_CFLAGS = @CONTROL_CENTER_EMBEDDING_CFLAGS@
CONTROL_CENTER_EMBEDDING_LIBS = @CONTROL_CENTER_EMBEDDING_LIBS@
CONTROL_CENTER_EXTENSIONDIR = @CONTROL_CENTER_EXTENSIONDIR@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DBUS_BINDING_TOOL = @DBUS_BINDING_TOOL@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISABLE_DEPRECATED = @DISABLE_DEPRECATED@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DOC_USER_FORMATS = @DOC_USER_FORMATS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EMPATHY_CFLAGS = @EMPATHY_CFLAGS@
EMPATHY_LIBS = @EMPATHY_LIBS@
ENABLE_CODING_STYLE_CHECKS = @ENABLE_CODING_STYLE_CHECKS@
ENCHANT_CFLAGS = @ENCHANT_CFLAGS@
ENCHANT_LIBS = @ENCHANT_LIBS@
ERROR_CFLAGS = @ERROR_CFLAGS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCONFTOOL = @GCONFTOOL@
GCONF_SCHEMA_CONFIG_SOURCE = @GCONF_SCHEMA_CONFIG_SOURCE@
GCONF_SCHEMA_FILE_DIR = @GCONF_SCHEMA_FILE_DIR@
GEOCLUE_CFLAGS = @GEOCLUE_CFLAGS@
GEOCLUE_LIBS = @GEOCLUE_LIBS@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GLIB_LIBS = @GLIB_LIBS@
GLIB_MKENUMS = @GLIB_MKENUMS@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GOBJECT_QUERY = @GOBJECT_QUERY@
GREP = @GREP@
HELP_DIR = @HELP_DIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBCHAMPLAIN_CFLAGS = @LIBCHAMPLAIN_CFLAGS@
LIBCHAMPLAIN_LIBS = @LIBCHAMPLAIN_LIBS@
LIBEMPATHYGTK_CFLAGS = @LIBEMPATHYGTK_CFLAGS@
LIBEMPATHYGTK_LIBS = @LIBEMPATHYGTK_LIBS@
LIBEMPATHY_ACCOUNTS_PANEL_CFLAGS = @LIBEMPATHY_ACCOUNTS_PANEL_CFLAGS@
LIBEMPATHY_ACCOUNTS_PANEL_LIBS = @LIBEMPATHY_ACCOUNTS_PANEL_LIBS@
LIBEMPATHY_CFLAGS = @LIBEMPATHY_CFLAGS@
LIBEMPATHY_LIBS = @LIBEMPATHY_LIBS@
LIBNOTIFY_CFLAGS = @LIBNOTIFY_CFLAGS@
LIBNOTIFY_LIBS = @LIBNOTIFY_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MEEGO_CFLAGS = @MEEGO_CFLAGS@
MEEGO_LIBS = @MEEGO_LIBS@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
NETWORK_MANAGER_CFLAGS = @NETWORK_MANAGER_CFLAGS@
NETWORK_MANAGER_LIBS = @NETWORK_MANAGER_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NST_CFLAGS = @NST_CFLAGS@
NST_LIBS = @NST_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OMF_DIR = @OMF_DIR@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TELEPATHY_LOGGER_CFLAGS = @TELEPATHY_LOGGER_CFLAGS@
TELEPATHY_LOGGER_LIBS = @TELEPATHY_LOGGER_LIBS@
TPL_CFLAGS = @TPL_CFLAGS@
TPL_LIBS = @TPL_LIBS@
USE_NLS = @USE_NLS@
VALGRIND_CFLAGS = @VALGRIND_CFLAGS@
VALGRIND_LIBS = @VALGRIND_LIBS@
VALGRIND_PATH = @VALGRIND_PATH@
VERSION = @VERSION@
WEBKIT_CFLAGS = @WEBKIT_CFLAGS@
WEBKIT_LIBS = @WEBKIT_LIBS@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XSLTPROC = @XSLTPROC@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CPPFLAGS_COMMON = \
	$(EMPATHY_CFLAGS)				\
	$(ERROR_CFLAGS)					\
	-I$(top_srcdir)                          	\
	-DG_LOG_DOMAIN=\"empathy\"			\
	-DBIN_DIR=\"$(bindir)\"                         \
	$(DISABLE_DEPRECATED)				\
	$(WARN_CFLAGS)					\
	$(NULL)

AM_LDFLAGS = -lm
AM_CPPFLAGS = \
	$(CPPFLAGS_COMMON)				\
	$(TPL_CFLAGS)					\
	$(LIBNOTIFY_CFLAGS)				\
	$(LIBCHAMPLAIN_CFLAGS)				\
	$(WEBKIT_CFLAGS)				\
	$(NULL)

LDADD = \
	$(top_builddir)/libempathy-gtk/libempathy-gtk.la	\
	$(top_builddir)/libempathy/libempathy.la		\
	$(top_builddir)/extensions/libemp-extensions.la		\
	$(TPL_LIBS)						\
	$(LIBNOTIFY_LIBS)					\
	$(EMPATHY_LIBS)						\
	$(LIBCHAMPLAIN_LIBS)					\
	$(WEBKIT_LIBS)

noinst_LTLIBRARIES = libempathy-accounts-common.la
libempathy_accounts_common_la_SOURCES = \
	empathy-accounts-common.c empathy-accounts-common.h		\
	empathy-account-assistant.c empathy-account-assistant.h		\
	empathy-accounts-dialog.c empathy-accounts-dialog.h		\
	empathy-auto-salut-account-helper.c empathy-auto-salut-account-helper.h \
	empathy-import-dialog.c empathy-import-dialog.h			\
	empathy-import-mc4-accounts.c empathy-import-mc4-accounts.h	\
	empathy-import-pidgin.c empathy-import-pidgin.h			\
	empathy-import-widget.c empathy-import-widget.h			\
	empathy-import-utils.c empathy-import-utils.h			\
	ephy-spinner.c ephy-spinner.h					\
	$(NULL)

libempathy_accounts_common_la_LIBADD = \
        $(top_builddir)/libempathy-gtk/libempathy-gtk.la		\
        $(LIBNOTIFY_LIBS)						\
        $(EMPATHY_LIBS)							\
        $(LIBCHAMPLAIN_LIBS)						\
        $(WEBKIT_LIBS)							\
	$(NULL)

@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@ccmodulesdir = $(CONTROL_CENTER_EXTENSIONDIR)
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@ccmodules_LTLIBRARIES = libempathy-accounts-panel.la
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@libempathy_accounts_panel_la_SOURCES = \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	empathy-accounts-module.c				\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	cc-empathy-accounts-page.c				\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	cc-empathy-accounts-page.h				\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	cc-empathy-accounts-panel.c				\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	cc-empathy-accounts-panel.h				\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(NULL)

@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@libempathy_accounts_panel_la_CPPFLAGS = \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(CPPFLAGS_COMMON)					\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(CONTROL_CENTER_EMBEDDING_CFLAGS)			\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(NULL)

@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@libempathy_accounts_panel_la_LDFLAGS = -export_dynamic -avoid-version -module -no-undefined -export-symbols-regex '^g_io_module_(load|unload)'
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@libempathy_accounts_panel_la_LIBADD = \
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(EMPATHY_LIBS)						\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(CONTROL_CENTER_EMBEDDING_LIBS)			\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	libempathy-accounts-common.la				\
@HAVE_CONTROL_CENTER_EMBEDDING_TRUE@	$(NULL)

BUILT_SOURCES = 
empathy_accounts_SOURCES = \
	empathy-accounts.c empathy-accounts.h				\
	$(NULL)

empathy_accounts_LDADD = \
	$(LDADD)							\
	libempathy-accounts-common.la					\
	$(NULL)

empathy_debugger_SOURCES = \
	empathy-debug-window.c empathy-debug-window.h			\
	empathy-debugger.c		 				\
	$(NULL)

empathy_handwritten_source = empathy-about-dialog.c \
	empathy-about-dialog.h empathy-call-window-fullscreen.c \
	empathy-call-window-fullscreen.h empathy-call-window.c \
	empathy-call-window.h empathy-chat-window.c \
	empathy-chat-window.h empathy-chatrooms-window.c \
	empathy-chatrooms-window.h empathy-event-manager.c \
	empathy-event-manager.h empathy-ft-manager.c \
	empathy-ft-manager.h empathy-invite-participant-dialog.c \
	empathy-invite-participant-dialog.h empathy-main-window.c \
	empathy-main-window.h empathy-migrate-butterfly-logs.c \
	empathy-migrate-butterfly-logs.h empathy-new-chatroom-dialog.c \
	empathy-new-chatroom-dialog.h empathy-preferences.c \
	empathy-preferences.h empathy-sidebar.c empathy-sidebar.h \
	empathy-status-icon.c empathy-status-icon.h empathy.c \
	$(am__append_1)
empathy_SOURCES = \
	$(empathy_handwritten_source)					\
	$(NULL)

empathy_LDADD = \
	libempathy-accounts-common.la					\
        $(top_builddir)/libempathy-gtk/libempathy-gtk.la		\
        $(top_builddir)/libempathy/libempathy.la			\
        $(top_builddir)/extensions/libemp-extensions.la			\
        $(LIBNOTIFY_LIBS)						\
        $(EMPATHY_LIBS)							\
        $(LIBCHAMPLAIN_LIBS)						\
        $(WEBKIT_LIBS)							\
	$(NULL)

nodist_empathy_SOURCES = $(BUILT_SOURCES)
check_c_sources = $(empathy_handwritten_source) \
	$(empathy_logs_SOURCES) $(am__append_5)
uidir = $(datadir)/empathy
ui_DATA = empathy-accounts-dialog.ui empathy-call-window-fullscreen.ui \
	empathy-call-window.ui empathy-chat-window.ui \
	empathy-chatrooms-window.ui empathy-ft-manager.ui \
	empathy-import-dialog.ui empathy-main-window.ui \
	empathy-new-chatroom-dialog.ui empathy-preferences.ui \
	empathy-status-icon.ui $(am__append_2)
EXTRA_DIST = $(autostart_DATA) $(ui_DATA) $(am__append_3) \
	$(am__append_4)
dist_man_MANS = \
	empathy.1

CLEANFILES = $(BUILT_SOURCES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/tools/flymake.mk $(top_srcdir)/tools/check-coding-style.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-ccmodulesLTLIBRARIES: $(ccmodules_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(ccmodulesdir)" || $(MKDIR_P) "$(DESTDIR)$(ccmodulesdir)"
	@list='$(ccmodules_LTLIBRARIES)'; test -n "$(ccmodulesdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(ccmodulesdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(ccmodulesdir)"; \
	}

uninstall-ccmodulesLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(ccmodules_LTLIBRARIES)'; test -n "$(ccmodulesdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(ccmodulesdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(ccmodulesdir)/$$f"; \
	done

clean-ccmodulesLTLIBRARIES:
	-test -z "$(ccmodules_LTLIBRARIES)" || rm -f $(ccmodules_LTLIBRARIES)
	@list='$(ccmodules_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libempathy-accounts-common.la: $(libempathy_accounts_common_la_OBJECTS) $(libempathy_accounts_common_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libempathy_accounts_common_la_OBJECTS) $(libempathy_accounts_common_la_LIBADD) $(LIBS)
libempathy-accounts-panel.la: $(libempathy_accounts_panel_la_OBJECTS) $(libempathy_accounts_panel_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libempathy_accounts_panel_la_LINK) $(am_libempathy_accounts_panel_la_rpath) $(libempathy_accounts_panel_la_OBJECTS) $(libempathy_accounts_panel_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
empathy$(EXEEXT): $(empathy_OBJECTS) $(empathy_DEPENDENCIES) 
	@rm -f empathy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(empathy_OBJECTS) $(empathy_LDADD) $(LIBS)
empathy-accounts$(EXEEXT): $(empathy_accounts_OBJECTS) $(empathy_accounts_DEPENDENCIES) 
	@rm -f empathy-accounts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(empathy_accounts_OBJECTS) $(empathy_accounts_LDADD) $(LIBS)
empathy-debugger$(EXEEXT): $(empathy_debugger_OBJECTS) $(empathy_debugger_DEPENDENCIES) 
	@rm -f empathy-debugger$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(empathy_debugger_OBJECTS) $(empathy_debugger_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-about-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-account-assistant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-accounts-common.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-accounts-dialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-accounts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-auto-salut-account-helper.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-call-window-fullscreen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-call-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-chat-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-chatrooms-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-debug-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-debugger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-event-manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-ft-manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-import-dialog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-import-mc4-accounts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-import-pidgin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-import-utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-import-widget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-invite-participant-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-main-window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-map-view.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-migrate-butterfly-logs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-new-chatroom-dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-preferences.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-sidebar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy-status-icon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/empathy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ephy-spinner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-page.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-panel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libempathy_accounts_panel_la-empathy-accounts-module.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libempathy_accounts_panel_la-empathy-accounts-module.lo: empathy-accounts-module.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libempathy_accounts_panel_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libempathy_accounts_panel_la-empathy-accounts-module.lo -MD -MP -MF $(DEPDIR)/libempathy_accounts_panel_la-empathy-accounts-module.Tpo -c -o libempathy_accounts_panel_la-empathy-accounts-module.lo `test -f 'empathy-accounts-module.c' || echo '$(srcdir)/'`empathy-accounts-module.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libempathy_accounts_panel_la-empathy-accounts-module.Tpo $(DEPDIR)/libempathy_accounts_panel_la-empathy-accounts-module.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='empathy-accounts-module.c' object='libempathy_accounts_panel_la-empathy-accounts-module.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libempathy_accounts_panel_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libempathy_accounts_panel_la-empathy-accounts-module.lo `test -f 'empathy-accounts-module.c' || echo '$(srcdir)/'`empathy-accounts-module.c

libempathy_accounts_panel_la-cc-empathy-accounts-page.lo: cc-empathy-accounts-page.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libempathy_accounts_panel_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libempathy_accounts_panel_la-cc-empathy-accounts-page.lo -MD -MP -MF $(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-page.Tpo -c -o libempathy_accounts_panel_la-cc-empathy-accounts-page.lo `test -f 'cc-empathy-accounts-page.c' || echo '$(srcdir)/'`cc-empathy-accounts-page.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-page.Tpo $(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-page.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cc-empathy-accounts-page.c' object='libempathy_accounts_panel_la-cc-empathy-accounts-page.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libempathy_accounts_panel_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libempathy_accounts_panel_la-cc-empathy-accounts-page.lo `test -f 'cc-empathy-accounts-page.c' || echo '$(srcdir)/'`cc-empathy-accounts-page.c

libempathy_accounts_panel_la-cc-empathy-accounts-panel.lo: cc-empathy-accounts-panel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libempathy_accounts_panel_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libempathy_accounts_panel_la-cc-empathy-accounts-panel.lo -MD -MP -MF $(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-panel.Tpo -c -o libempathy_accounts_panel_la-cc-empathy-accounts-panel.lo `test -f 'cc-empathy-accounts-panel.c' || echo '$(srcdir)/'`cc-empathy-accounts-panel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-panel.Tpo $(DEPDIR)/libempathy_accounts_panel_la-cc-empathy-accounts-panel.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='cc-empathy-accounts-panel.c' object='libempathy_accounts_panel_la-cc-empathy-accounts-panel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libempathy_accounts_panel_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libempathy_accounts_panel_la-cc-empathy-accounts-panel.lo `test -f 'cc-empathy-accounts-panel.c' || echo '$(srcdir)/'`cc-empathy-accounts-panel.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list=''; test -n "$(man1dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man1dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man1dir)" && rm -f $$files; }
install-uiDATA: $(ui_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(uidir)" || $(MKDIR_P) "$(DESTDIR)$(uidir)"
	@list='$(ui_DATA)'; test -n "$(uidir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(uidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(uidir)" || exit $$?; \
	done

uninstall-uiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ui_DATA)'; test -n "$(uidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(uidir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(uidir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(ccmodulesdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(uidir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-ccmodulesLTLIBRARIES clean-generic \
	clean-libtool clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-ccmodulesLTLIBRARIES install-man \
	install-uiDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-ccmodulesLTLIBRARIES \
	uninstall-man uninstall-uiDATA

uninstall-man: uninstall-man1

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-binPROGRAMS clean-ccmodulesLTLIBRARIES clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS \
	install-ccmodulesLTLIBRARIES install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-uiDATA installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-ccmodulesLTLIBRARIES uninstall-man uninstall-man1 \
	uninstall-uiDATA

check-syntax:
	$(CC) $(AM_CPPFLAGS) $(AM_CFLAGS) -fsyntax-only $(CHK_SOURCES)

.PHONY: check-syntax
check-coding-style:
	@fail=0; \
	if test -n "$(check_misc_sources)"; then \
		tools_dir=$(top_srcdir)/tools \
		sh $(top_srcdir)/tools/check-misc.sh \
			$(check_misc_sources) || fail=1; \
	fi; \
	if test -n "$(check_c_sources)"; then \
		tools_dir=$(top_srcdir)/tools \
		sh $(top_srcdir)/tools/check-c-style.sh \
			$(check_c_sources) || fail=1; \
	fi;\
	if test yes = "$(ENABLE_CODING_STYLE_CHECKS)"; then \
		exit "$$fail";\
	else \
		exit 0;\
	fi

check-local: check-coding-style

# rules for making the glib enum objects
%-enumtypes.h: %.h Makefile.in
	$(AM_V_GEN)glib-mkenums \
	--fhead "#ifndef __$(shell echo $* | tr [:lower:]- [:upper:]_)_ENUM_TYPES_H__\n#define __$(shell echo $* | tr [:lower:]- [:upper:]_)_ENUM_TYPES_H__\n\n#include <glib-object.h>\n\nG_BEGIN_DECLS\n" \
	--fprod "/* enumerations from \"@filename@\" */\n" \
	--vhead "GType @enum_name@_get_type (void);\n#define $(shell echo $* | tr [:lower:]- [:upper:]_ | sed 's/_.*//')_TYPE_@ENUMSHORT@ (@enum_name@_get_type())\n"         \
	--ftail "G_END_DECLS\n\n#endif /* __$(shell echo $* | tr [:lower:]- [:upper:]_)_ENUM_TYPES_H__ */" \
	$< > $@

%-enumtypes.c: %.h Makefile.in
	$(AM_V_GEN)glib-mkenums \
	--fhead "#include <$*.h>\n#include <$*-enumtypes.h>" \
	--fprod "\n/* enumerations from \"@filename@\" */" \
	--vhead "GType\n@enum_name@_get_type (void)\n{\n  static GType etype = 0;\n  if (etype == 0) {\n    static const G@Type@Value values[] = {"     \
	--vprod "      { @VALUENAME@, \"@VALUENAME@\", \"@VALUENAME@\" }," \
	--vtail "      { 0, NULL, NULL }\n    };\n    etype = g_@type@_register_static (\"@EnumName@\", values);\n  }\n  return etype;\n}\n" \
	$< > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
